A modern React-based music streaming platform client application with AI-powered features, real-time chat, and comprehensive music management capabilities.

## üéµ Features

### Core Music Features
- **Music Streaming**: High-quality audio playback with advanced controls
- **Library Management**: Organize your music collection with playlists, albums, and favorites
- **Search & Discovery**: Find new music and artists with intelligent search
- **Artist & Album Pages**: Detailed views for artists and their discographies
- **Music Upload**: Upload and publish your own tracks

### AI-Powered Features
- **AI Music Generation**: Create original music using AI technology
- **AI Avatar**: Interactive AI assistant for music recommendations
- **Smart Recommendations**: Personalized music suggestions

### Social & Interactive
- **Real-time Chat**: Connect with other music lovers
- **User Profiles**: Customize your music profile
- **Publishing Platform**: Share and monetize your music

### Premium Features
- **Subscription Management**: Premium tier with enhanced features
- **PayPal Integration**: Secure payment processing
- **Advanced Audio Controls**: Professional-grade audio features

## üõ†Ô∏è Technology Stack

### Frontend Framework
- **React 18.2.0**: Modern React with hooks and concurrent features
- **React Router DOM 6.15.0**: Client-side routing
- **Material-UI 5.14.5**: Modern component library with theming

### State Management & Data
- **React Query 3.39.3**: Server state management and caching
- **React Hook Form 7.45.4**: Efficient form handling
- **Context API**: Global state management for auth, player, and chat

### Audio & Media
- **WaveSurfer.js 7.3.0**: Advanced audio waveform visualization
- **React Audio Player 0.17.0**: Audio playback controls

### UI/UX Libraries
- **Framer Motion 10.16.4**: Smooth animations and transitions
- **React Hot Toast 2.4.1**: Beautiful notification system
- **React Dropzone 14.2.3**: Drag-and-drop file uploads

### Communication
- **Socket.io Client 4.7.2**: Real-time bidirectional communication
- **Axios 1.5.0**: HTTP client for API requests

### Payments
- **PayPal React SDK 8.9.1**: Secure payment processing

## üöÄ Getting Started

### Prerequisites
- Node.js (v16 or higher)
- npm or yarn package manager
- WAVS server running (see server documentation)

### Installation

1. **Clone the repository**
   ```bash
   git clone <repository-url>
   cd wavs/client
   ```

2. **Install dependencies**
   ```bash
   npm install
   ```

3. **Environment Setup**
   Create a `.env` file in the client directory:
   ```env
   REACT_APP_API_URL=http://localhost:5000
   REACT_APP_SOCKET_URL=http://localhost:5000
   REACT_APP_PAYPAL_CLIENT_ID=your_paypal_client_id
   ```

4. **Start the development server**
   ```bash
   npm start
   ```

   The application will open at `http://localhost:3000`

## üìÅ Project Structure

```
src/
‚îú‚îÄ‚îÄ components/          # Reusable UI components
‚îÇ   ‚îú‚îÄ‚îÄ Auth/           # Authentication components
‚îÇ   ‚îú‚îÄ‚îÄ Chat/           # Real-time chat components
‚îÇ   ‚îú‚îÄ‚îÄ Layout/         # Navigation and layout components
‚îÇ   ‚îî‚îÄ‚îÄ Player/         # Music player components
‚îú‚îÄ‚îÄ contexts/           # React Context providers
‚îÇ   ‚îú‚îÄ‚îÄ AuthContext.js  # Authentication state
‚îÇ   ‚îú‚îÄ‚îÄ PlayerContext.js # Music player state
‚îÇ   ‚îú‚îÄ‚îÄ ChatContext.js  # Chat functionality
‚îÇ   ‚îî‚îÄ‚îÄ ThemeContext.js # UI theme management
‚îú‚îÄ‚îÄ pages/              # Application pages/routes
‚îÇ   ‚îú‚îÄ‚îÄ Home/           # Landing page
‚îÇ   ‚îú‚îÄ‚îÄ Auth/           # Login/Register pages
‚îÇ   ‚îú‚îÄ‚îÄ Profile/        # User profile management
‚îÇ   ‚îú‚îÄ‚îÄ Upload/         # Music upload interface
‚îÇ   ‚îú‚îÄ‚îÄ Search/         # Search functionality
‚îÇ   ‚îú‚îÄ‚îÄ Library/        # User's music library
‚îÇ   ‚îú‚îÄ‚îÄ Discover/       # Music discovery
‚îÇ   ‚îú‚îÄ‚îÄ AIMusic/        # AI music generation
‚îÇ   ‚îú‚îÄ‚îÄ AIAvatar/       # AI assistant interface
‚îÇ   ‚îî‚îÄ‚îÄ Publishing/     # Music publishing tools
‚îú‚îÄ‚îÄ services/           # API service functions
‚îÇ   ‚îú‚îÄ‚îÄ aiAvatarService.js
‚îÇ   ‚îî‚îÄ‚îÄ aiMusicService.js
‚îú‚îÄ‚îÄ App.js              # Main application component
‚îî‚îÄ‚îÄ index.js            # Application entry point
```

## üé® Theming

The application uses Material-UI's theming system with a dark mode design:
- **Primary Color**: Blue (#2196F3)
- **Secondary Color**: Black (#000000)
- **Dark Mode**: Enabled by default
- **Custom Components**: Styled with Emotion

## üîê Authentication

The app includes a complete authentication system:
- User registration and login
- Protected routes for authenticated users
- JWT token management
- Persistent login sessions

## üéµ Music Player

Advanced music player features:
- Waveform visualization with WaveSurfer.js
- Play/pause, skip, shuffle, repeat controls
- Volume control and muting
- Progress tracking and seeking
- Queue management

## üí¨ Real-time Features

- **Live Chat**: Socket.io powered real-time messaging
- **Live Updates**: Real-time notifications for new music
- **Collaborative Features**: Shared playlists and social interactions

## üì± Responsive Design

Fully responsive design that works on:
- Desktop computers
- Tablets
- Mobile devices
- Various screen sizes and orientations

## üß™ Testing

Run the test suite:
```bash
npm test
```

The project includes:
- Jest testing framework
- React Testing Library
- Component unit tests
- Integration tests

## üèóÔ∏è Building for Production

1. **Create production build**
   ```bash
   npm run build
   ```

2. **Serve the build**
   ```bash
   npx serve -s build
   ```

## üê≥ Docker Support

The client includes Docker support:

```bash
# Build Docker image
docker build -t wavs-client .

# Run container
docker run -p 3000:80 wavs-client
```

## üîß Available Scripts

- `npm start`: Start development server
- `npm build`: Create production build
- `npm test`: Run test suite
- `npm eject`: Eject from Create React App (irreversible)

## üåê Browser Support

### Production
- Modern browsers with >0.2% market share
- No Internet Explorer support
- No Opera Mini support

### Development
- Latest Chrome, Firefox, and Safari versions

## ü§ù Contributing

1. Fork the repository
2. Create a feature branch (`git checkout -b feature/amazing-feature`)
3. Commit your changes (`git commit -m 'Add amazing feature'`)
4. Push to the branch (`git push origin feature/amazing-feature`)
5. Open a Pull Request

## üìÑ License

This project is part of the WAVS platform. See the main repository for license information.

## üÜò Support

For support and questions:
- Check the main WAVS documentation
- Open an issue in the repository
- Contact the development team

---

**WAVS Client** - Bringing the future of music streaming to your browser üéµ
